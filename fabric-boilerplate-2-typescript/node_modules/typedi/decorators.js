"use strict";
var Container_1 = require("./Container");
/**
 * Marks class as a service that can be injected using container.
 *
 * @param name Optional service name can be specified. If service name is specified then this service can only be
 *              retrieved by a service name. If no service name is specified then service can be retrieved by its type
 */
function Service(name) {
    return function (target) {
        var params = Reflect.getMetadata("design:paramtypes", target);
        Container_1.Container.registerService(name, target, params);
    };
}
exports.Service = Service;
function Inject(typeOrName) {
    return function (target, key, index) {
        if (!typeOrName)
            typeOrName = function () { return Reflect.getMetadata("design:type", target, key); };
        if (index !== undefined) {
            Container_1.Container.registerParamHandler({
                type: target,
                index: index,
                getValue: function () { return Container_1.Container.get(typeof typeOrName === "string" ? typeOrName : typeOrName()); }
            });
        }
        else {
            Container_1.Container.registerPropertyHandler({
                target: target,
                key: key,
                getValue: function () { return Container_1.Container.get(typeof typeOrName === "string" ? typeOrName : typeOrName()); }
            });
        }
    };
}
exports.Inject = Inject;
/**
 * Makes a "require" npm package with the given name and injects its value.
 * NOTE: experimental.
 *
 * @param name The name of the package to require
 */
function Require(name) {
    return function (target, key, index) {
        if (index !== undefined) {
            Container_1.Container.registerParamHandler({
                type: target,
                index: index,
                getValue: function () { return require(name); }
            });
        }
        else {
            Container_1.Container.registerPropertyHandler({
                target: target,
                key: key,
                getValue: function () { return require(name); }
            });
        }
    };
}
exports.Require = Require;

//# sourceMappingURL=decorators.js.map
